!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CPP	Makefile	/^CPP = g++$/;"	m
CPPFLAGS	Makefile	/^    CPPFLAGS := $(CPPFLAGS) $(DEBUG)$/;"	m
CPPFLAGS	Makefile	/^    CPPFLAGS := $(CPPFLAGS) $(RELEASE)$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS  = $(TARGETINCS) -std=c++11$/;"	m
DEBUG	Makefile	/^DEBUG = -g -DDEBUG -D_REENTRANT$/;"	m
DataBuffer	include/EPOLLSvr.h	/^class DataBuffer$/;"	c
DataBuffer	src/EPOLLSvr.cpp	/^DataBuffer::DataBuffer(int32_t _s, int32_t _sz, char* ptr)$/;"	f	class:DataBuffer
LINKFLAGS	Makefile	/^LINKFLAGS = $(TARGETLIBS) -lpthread -lrt -lnsl -lgcc_s  -lglog$/;"	m
MONITOR	include/EPOLLSvr.h	/^        MONITOR(){recvPackCount = 0; sendPackCount = 0;}$/;"	f	class:MONITOR
MONITOR	include/EPOLLSvr.h	/^class MONITOR$/;"	c
MONITOR_SVR	src/EPOLLSvr.cpp	/^MONITOR MONITOR_SVR;$/;"	v
OBJECTPATH	Makefile	/^    OBJECTPATH := .$/;"	m
OBJECTPATH	Makefile	/^OBJECTPATH := .\/obj\/$(TARGETNAME)$/;"	m
OBJS	Makefile	/^OBJS = $(addprefix $(OBJECTPATH)\/, $(patsubst %.c,%.o,$(TARGETOBJSRCS:.cpp=.o)))$/;"	m
RELEASE	Makefile	/^RELEASE = -g -O2$/;"	m
SRCPATH	Makefile	/^SRCPATH := .\/src$/;"	m
SafeQueue	include/EPOLLSvr.h	/^        SafeQueue(int32_t _sz)$/;"	f	class:SafeQueue
SafeQueue	include/EPOLLSvr.h	/^class SafeQueue$/;"	c
TARGETINCS	Makefile	/^TARGETINCS = -I.\/include  -I..\/common\/include$/;"	m
TARGETLIBS	Makefile	/^TARGETLIBS =  #..\/protocol\/OdaoMobileProto.a$/;"	m
TARGETNAME	Makefile	/^        TARGETNAME := $(TARGETNAME).so$/;"	m
TARGETNAME	Makefile	/^    TARGETNAME := $(TARGETNAME).a$/;"	m
TARGETNAME	Makefile	/^TARGETNAME := main.run$/;"	m
TARGETOBJSRCS	Makefile	/^TARGETOBJSRCS = $(subst $(SRCPATH)\/, ,$(TARGETSRCS))$/;"	m
TARGETPATH	Makefile	/^    TARGETPATH := .$/;"	m
TARGETPATH	Makefile	/^TARGETPATH := .\/bin$/;"	m
TARGETSRCS	Makefile	/^TARGETSRCS = $(wildcard $(SRCPATH)\/*.c $(SRCPATH)\/*.cpp)$/;"	m
TARGETTYPE	Makefile	/^TARGETTYPE = 0$/;"	m
TYPE	Makefile	/^        TYPE = -shared$/;"	m
Timer	include/EPOLLSvr.h	/^class Timer$/;"	c
Timer	src/EPOLLSvr.cpp	/^    Timer::Timer()$/;"	f	class:Timer
addRecvPack	include/EPOLLSvr.h	/^        void addRecvPack(){++recvPackCount;}$/;"	f	class:MONITOR
addSendPack	include/EPOLLSvr.h	/^        void addSendPack(){++sendPackCount;}$/;"	f	class:MONITOR
buf	include/EPOLLSvr.h	/^        std::vector<char> buf;$/;"	m	class:DataBuffer
cancelTimer	src/EPOLLSvr.cpp	/^    bool Timer::cancelTimer(uint64_t id)$/;"	f	class:Timer
checkTimer	src/EPOLLSvr.cpp	/^    void Timer::checkTimer()$/;"	f	class:Timer
chrono_test	src/main.cpp	/^void chrono_test()$/;"	f
createTimer	src/EPOLLSvr.cpp	/^    uint64_t Timer::createTimer(uint64_t tick, _OnTimerHandler &&h)$/;"	f	class:Timer
createTimer	src/EPOLLSvr.cpp	/^    uint64_t Timer::createTimer(uint64_t tick, const _OnTimerHandler& h)$/;"	f	class:Timer
getNextExpireTime	src/EPOLLSvr.cpp	/^    uint32_t Timer::getNextExpireTime()$/;"	f	class:Timer
getSysTick	src/EPOLLSvr.cpp	/^    uint64_t Timer::getSysTick()$/;"	f	class:Timer
isNotEmpty	include/EPOLLSvr.h	/^        bool isNotEmpty()$/;"	f	class:SafeQueue
isNotFull	include/EPOLLSvr.h	/^        bool isNotFull()$/;"	f	class:SafeQueue
main	src/main.cpp	/^int main(int argc, char* argv[])$/;"	f
maxSZ	include/EPOLLSvr.h	/^        uint32_t maxSZ;     \/\/队列最大消息数量$/;"	m	class:SafeQueue
msgQ	include/EPOLLSvr.h	/^        std::queue<T> msgQ; \/\/消息队列$/;"	m	class:SafeQueue
mt	include/EPOLLSvr.h	/^        std::mutex mt;      \/\/互斥变量$/;"	m	class:SafeQueue
notEmpty	include/EPOLLSvr.h	/^        std::condition_variable notEmpty;$/;"	m	class:SafeQueue
notFull	include/EPOLLSvr.h	/^        std::condition_variable notFull;$/;"	m	class:SafeQueue
pour	include/EPOLLSvr.h	/^        bool pour(std::vector<T> &msg)$/;"	f	class:SafeQueue
put	include/EPOLLSvr.h	/^        bool put(const T &msg)$/;"	f	class:SafeQueue
recvPackCount	include/EPOLLSvr.h	/^        std::atomic<uint64_t> recvPackCount; \/\/收到的包数量$/;"	m	class:MONITOR
sendPackCount	include/EPOLLSvr.h	/^        std::atomic<uint64_t> sendPackCount; \/\/收到的包数量$/;"	m	class:MONITOR
sock	include/EPOLLSvr.h	/^        int32_t  sock; \/\/文件描述符$/;"	m	class:DataBuffer
startSysTime	include/EPOLLSvr.h	/^        const uint64_t startSysTime = getSysTick();$/;"	m	class:Timer
stop	include/EPOLLSvr.h	/^        bool stop;         \/\/是否已经停止$/;"	m	class:SafeQueue
sz	include/EPOLLSvr.h	/^        int32_t sz;    \/\/数据包大小$/;"	m	class:DataBuffer
test	src/main.cpp	/^void test()$/;"	f
testQ	src/main.cpp	/^void testQ()$/;"	f
testVec	src/main.cpp	/^void testVec()$/;"	f
timer	src/main.cpp	/^bool timer()$/;"	f
timerMap	include/EPOLLSvr.h	/^        std::map<uint64_t, _OnTimerHandler*> timerMap;$/;"	m	class:Timer
~SafeQueue	include/EPOLLSvr.h	/^        ~SafeQueue()$/;"	f	class:SafeQueue
~Timer	src/EPOLLSvr.cpp	/^    Timer::~Timer()$/;"	f	class:Timer
